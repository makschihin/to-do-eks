# This is a basic workflow to help you get started with Actions

name: CI_for_todo_app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run : echo Hello, world!

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWD }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Version(shot sha of git commit)
        run : echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
        
      - name: Build new version of image and push it to docker hub registry
        uses: docker/build-push-action@v2
        with:
          build-args: |
            mongo_uri=${{ secrets.MONGODB_URI }}
          context   : ./
          file      : ./dockerfile
          builder   : ${{ steps.buildx.outputs.name }}
          push      : true
          tags      :  ${{ secrets.DOCKER_HUB_USER }}/todo:${{ env.SHORT_SHA }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to  : type=local,dest=/tmp/.buildx-cache
          
      - name: Image digest
        run : echo ${{ steps.docker_build.outputs.digest }}

  deploy:
   runs-on: ubuntu-latest
   needs: [build]
   steps:
     - name: Hi!
       run : echo "Hi!"
     
     - name: Version(shot sha of git commit)
       run : echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
       
     - name: Configure my AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id    :  ${{ secrets.AWS_ACCESS_KEY }}
         aws-secret-access-key:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region           :  ${{ secrets.AWS_REGION }}
     
     - name: Check aws creadentials
       run : aws sts get-caller-identity
